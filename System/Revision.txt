SmGw :
--------------------------------------------------------
Rev 1.02 : 
--------------------------------------------------------
Rev 1.03 : Validation mode beep/nobeep sur un seul RmDv (vers 1.00)
Le mode programmation est OK sur les premiers tests.
--------------------------------------------------------
Rev 1.04 : To be commited quelques bug d'affichage LCD fixé, InfoLCD nettoyer (faire le .h)

========================================================
--------------------------------------------------------
Rev 2.00 : passage compilo V6
- Timer_F103 : changement IPR vers IP (changement .h)
- Timer_F103 : déclaration compteur Systick en volatile (Cpt_100us)

- GPIO_F103 : 
L211 else à la place de else if pour tout explorer
L214 élimination Reg_Num=Reg_Num;
changement IPR vers IP (changement .h)
- USARTStack.c
L277 : checksum, élimination UART_Stack_Sum=Longueur;  (long non initialisée...) par 
			UART_Stack_Sum=0;
		
- MyLCD.c : modif type dans une indice de boucle : i devient unsigned int et non plus int
- FSKStack.c : modif type volatile PhyUART_Mssg, il s'agit de la grosse structure de réception
- SmartGwMain_1_00.c renommée SmartGwMain.c
- SmartGwMain.c : L253 : initialisation variable PrevState car état indéfini par la suite
- MyI2C.c
L180 déclaration buffer en volatile global (lecture bidon nécessaire)

--------------------------------------------------------
Rev 2.01 : 
- TimeManagement.c/.h 
Délay en boucle for abandonné pour TimeManag_Delay_x_ms() qui utilise
me systick. Précis à 100µs (le quantum).
Tous les appels à l'ancien délai sont remplacés par le nouveau
- FSKStack.c
L517 délai de 4 ms rallongé à 5ms (pas forcément utile...)

-Global_SmartGateway.h
L71 modif prio CD = 2 pour vraiment prioriser Systick
Ajout Prio TimerStamp que l'on met à 1, juste après Systick
- TimeStampManagement.C/.h 
Modif ajout prio en argument , void TimerStamp_Start(int Prio);

--------------------------------------------------------
Rev 2.02 : 
- SmartGwMain.c
Ligne 213, ajout if not RmDvExt pour le calcul nouvelle consigne.
-Global_SmartGateway.h
Ligne 64 ajout #define PrioUSARTStack 2	
L'idée est de laisser l'IT 1 sec interrompre l'IT HMI (USARTStack) pour 
ne pas désynchroniser les clock. A priori pas d'effet notable...
- HMI_RmDv_Algo.c
Ligne 183, erreur entre clim on et off, != dans le if au lieu de ==
Ligne 186, erreur ds le nbre de clim on et off, formule reprise.
- InfoLCD.c bug affichage temp en double fixé
Ligne 481 MyLCD_Print_n(&deg,1); (avant simple print qui venait 
faire une lecture en overflow...
- tous les plantage en while(1) sont maintenant accompagné d'un blocage
de l'IT one Sec (arrêt timer) pour inhiber l'affichage et rester sur le
message d'erreur. Maintenant le LCD sur plantage indique le nom du fichier
et la ligne en faute.
*******************************************************
RmDv :
--------------------------------------------------------
Rev 1.00 : Tout fonctionne correctement, reste à bloquer la cmde IR en cas de non commande
(mode no beep).
--------------------------------------------------------
Rev 1.01 : commited la commande IR ne doit plus s'activer si NoCmde est reçu


*******************************************************
HMI :
